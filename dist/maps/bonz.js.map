{"version":3,"sources":["bonz.js"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"../bonz.js","sourcesContent":["/* global define */\n\n(function (context, factory) {\n    'use strict';\n\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports = factory();\n    } else if (typeof define === 'function' && define.amd) {\n        define([], factory);\n    } else {\n        context.$ = factory();\n    }\n})(this, function () {\n    function bonz(selector, context) {\n        var elements = [];\n\n        if (selector._bonz) {\n            return selector;\n        } else if (typeof selector === 'function') {\n            return document.addEventListener('DOMContentLoaded', selector);\n        } else if (selector instanceof Array) {\n            elements = selector;\n        } else if (selector.nodeType) {\n            elements = [selector];\n        } else if (selector.match(/^\\s*<(\\w+|!)[^>]*>/)) {\n            var container = document.createElement('div');\n            container.innerHTML = selector;\n            elements = [].slice.call(container.childNodes);\n        } else {\n            var contexts = context ? bonz(context)() : [document];\n\n            contexts.forEach(function (context) {\n                context = bonz(context)(0);\n                var found = [].slice.call(context.querySelectorAll(selector));\n                elements = elements.concat(found);\n            });\n        }\n\n        var fn = function fn(value1, value2) {\n            elements = elements.slice();\n\n            if (value1 === 'first') {\n                return fn(0, value2);\n            }\n\n            if (value1 === 'last') {\n                return fn(elements.length - 1, value2);\n            }\n\n            if (typeof value1 === 'number') {\n                if (value2) {\n                    elements = [elements[value1]];\n                    return fn(value2);\n                }\n                return elements[value1];\n            }\n\n            if (typeof value1 === 'function') {\n                if (value2) {\n                    elements = elements[value2](value1, elements);\n                } else {\n                    elements.forEach(value1, elements);\n                }\n                return fn;\n            }\n\n            if (value1 === 'if' && value2 === false) {\n                elements.forEach(function (element) {\n                    element.remove();\n                });\n                return fn;\n            }\n\n            return elements;\n        };\n\n        fn._bonz = true;\n\n        return fn;\n    };\n\n    return bonz;\n});"]}